2025-04-11 00:41:40
=== Typecheck < tests/minijava-symboltable-tests/correct-tests/BinaryTree.java ===
  ------------[Tree]
  Updating: [][][][][]global:Tree:Remove:c_node
  Updated: [!][!][!][!][!]Tree GOT [Tree]
  ++++++++++++[Tree]
  ------------[Tree]
  Updating: [][][][][]global:Tree:left
  Updated: [!][!][!][!][!]Tree GOT [Tree]
  ++++++++++++[Tree]
  ------------[Tree]
  Updating: [][][][][]global:Tree:Print:current_node
  Updated: [!][!][!][!][!]Tree GOT [Tree]
  ++++++++++++[Tree]
  ------------[Tree]
  Updating: [][][][][]global:Tree:SetLeft:ln
  Updated: [!][!][!][!][!]Tree GOT [Tree]
  ++++++++++++[Tree]
  ------------[Tree]
  Updating: [][][][][]global:BT:Start:root
  Updated: [!][!][!][!][!]Tree GOT [Tree]
  ++++++++++++[Tree]
  ------------[Tree]
  Updating: [][][][][]global:Tree:GetLeft
  Updated: [!][!][!][!][!]Tree GOT [Tree]
  ++++++++++++[Tree]
  ------------[Tree]
  Updating: [][][][][]global:Tree:Insert:new_node
  Updated: [!][!][!][!][!]Tree GOT [Tree]
  ++++++++++++[Tree]
  ------------[Tree]
  Updating: [][][][][]global:Tree:GetRight
  Updated: [!][!][!][!][!]Tree GOT [Tree]
  ++++++++++++[Tree]
  ------------[Tree]
  Updating: [][][][][]global:Tree:right
  Updated: [!][!][!][!][!]Tree GOT [Tree]
  ++++++++++++[Tree]
  ------------[Tree]
  Updating: [][][][][]global:Tree:SetRight:rn
  Updated: [!][!][!][!][!]Tree GOT [Tree]
  ++++++++++++[Tree]
  ------------[Tree]
  Updating: [][][][][]global:Tree:Insert:current_node
  Updated: [!][!][!][!][!]Tree GOT [Tree]
  ++++++++++++[Tree]
  ------------[Tree]
  Updating: [][][][][]global:Tree:Delete:parent_node
  Updated: [!][!][!][!][!]Tree GOT [Tree]
  ++++++++++++[Tree]
  ------------[Tree]
  Updating: [][][][][]global:Tree:RemoveRight:c_node
  Updated: [!][!][!][!][!]Tree GOT [Tree]
  ++++++++++++[Tree]
  ------------[Tree]
  Updating: [][][][][]global:Tree:RecPrint:node
  Updated: [!][!][!][!][!]Tree GOT [Tree]
  ++++++++++++[Tree]
  ------------[Tree]
  Updating: [][][][][]global:Tree:Search:current_node
  Updated: [!][!][!][!][!]Tree GOT [Tree]
  ++++++++++++[Tree]
  ------------[Tree]
  Updating: [][][][][]global:Tree:RemoveRight:p_node
  Updated: [!][!][!][!][!]Tree GOT [Tree]
  ++++++++++++[Tree]
  ------------[Tree]
  Updating: [][][][][]global:Tree:Delete:current_node
  Updated: [!][!][!][!][!]Tree GOT [Tree]
  ++++++++++++[Tree]
  ------------[Tree]
  Updating: [][][][][]global:Tree:Remove:p_node
  Updated: [!][!][!][!][!]Tree GOT [Tree]
  ++++++++++++[Tree]
  ------------[Tree]
  Updating: [][][][][]global:Tree:RemoveLeft:p_node
  Updated: [!][!][!][!][!]Tree GOT [Tree]
  ++++++++++++[Tree]
  ------------[Tree]
  Updating: [][][][][]global:Tree:RemoveLeft:c_node
  Updated: [!][!][!][!][!]Tree GOT [Tree]
  ++++++++++++[Tree]
  ------------[Tree]
  Updating: [][][][][]global:Tree:my_null
  Updated: [!][!][!][!][!]Tree GOT [Tree]
  ++++++++++++[Tree]
  -=-=-=-=-=-=-=-=-=-Symbol-Table-=-=-=-=-=-=-=-=-=-
  global:BT -> {[BT], 10, []}
  global:Tree -> {[Tree], 44, []}
  global:Tree:key -> {[int], 47, []}
  global:BT:Start -> {[int], 12, []}
  global:Tree:Init -> {[boolean], 53, []}
  global:Tree:left -> {[Tree], 45, []}
  global:Tree:right -> {[Tree], 46, []}
  global:Tree:Print -> {[boolean], 306, []}
  global:BinaryTree -> {[BinaryTree], 1, []}
  global:Tree:Insert -> {[boolean], 124, []}
  global:Tree:Delete -> {[boolean], 161, []}
  global:Tree:Remove -> {[boolean], 209, []}
  global:Tree:Search -> {[int], 277, []}
  global:Tree:SetKey -> {[boolean], 84, []}
  global:Tree:GetKey -> {[int], 80, []}
  global:BT:Start:ntb -> {[boolean], 14, []}
  global:BT:Start:nti -> {[int], 15, []}
  global:Tree:SetLeft -> {[boolean], 67, []}
  global:Tree:GetLeft -> {[Tree], 76, []}
  global:Tree:Compare -> {[boolean], 110, []}
  global:Tree:my_null -> {[Tree], 50, []}
  global:Tree:GetRight -> {[Tree], 72, []}
  global:Tree:SetRight -> {[boolean], 61, []}
  global:Tree:has_left -> {[boolean], 48, []}
  global:BT:Start:root -> {[Tree], 13, []}
  global:Tree:RecPrint -> {[boolean], 316, []}
  global:Tree:has_right -> {[boolean], 49, []}
  global:Tree:Print:ntb -> {[boolean], 308, []}
  global:Tree:Init:v_key -> {[int], 53, []}
  global:Tree:Delete:ntb -> {[boolean], 168, []}
  global:BinaryTree:main -> {[void], 2, []}
  global:Tree:Remove:ntb -> {[boolean], 210, []}
  global:Tree:Insert:ntb -> {[boolean], 126, []}
  global:Tree:SetLeft:ln -> {[Tree], 67, []}
  global:Tree:RemoveLeft -> {[boolean], 260, []}
  global:Tree:Delete:cont -> {[boolean], 164, []}
  global:Tree:Insert:cont -> {[boolean], 127, []}
  global:Tree:Search:cont -> {[boolean], 278, []}
  global:Tree:SetHas_Left -> {[boolean], 97, []}
  global:Tree:SetRight:rn -> {[Tree], 61, []}
  global:Tree:Compare:nti -> {[int], 112, []}
  global:Tree:Compare:ntb -> {[boolean], 111, []}
  global:Tree:GetHas_Left -> {[boolean], 93, []}
  global:Tree:RemoveRight -> {[boolean], 240, []}
  global:Tree:SetKey:v_key -> {[int], 84, []}
  global:Tree:Compare:num2 -> {[int], 110, []}
  global:BinaryTree:main:a -> {[String,[,]], 2, []}
  global:Tree:Compare:num1 -> {[int], 110, []}
  global:Tree:Search:v_key -> {[int], 277, []}
  global:Tree:Insert:v_key -> {[int], 124, []}
  global:Tree:SetHas_Right -> {[boolean], 102, []}
  global:Tree:RecPrint:ntb -> {[boolean], 317, []}
  global:Tree:GetHas_Right -> {[boolean], 89, []}
  global:Tree:Delete:found -> {[boolean], 165, []}
  global:Tree:Delete:v_key -> {[int], 161, []}
  global:Tree:Search:ifound -> {[int], 279, []}
  global:Tree:RecPrint:node -> {[Tree], 316, []}
  global:Tree:Remove:c_node -> {[Tree], 209, []}
  global:Tree:Remove:p_node -> {[Tree], 209, []}
  global:Tree:RemoveLeft:ntb -> {[boolean], 261, []}
  global:Tree:Remove:auxkey2 -> {[int], 212, []}
  global:Tree:Remove:auxkey1 -> {[int], 211, []}
  global:Tree:Insert:key_aux -> {[int], 128, []}
  global:Tree:Delete:is_root -> {[boolean], 166, []}
  global:Tree:Delete:key_aux -> {[int], 167, []}
  global:Tree:Search:key_aux -> {[int], 281, []}
  global:Tree:Insert:new_node -> {[Tree], 125, []}
  global:Tree:RemoveRight:ntb -> {[boolean], 241, []}
  global:Tree:SetHas_Left:val -> {[boolean], 97, []}
  global:Tree:SetHas_Right:val -> {[boolean], 102, []}
  global:Tree:RemoveLeft:p_node -> {[Tree], 260, []}
  global:Tree:RemoveLeft:c_node -> {[Tree], 260, []}
  global:Tree:Print:current_node -> {[Tree], 307, []}
  global:Tree:RemoveRight:c_node -> {[Tree], 240, []}
  global:Tree:Delete:parent_node -> {[Tree], 163, []}
  global:Tree:RemoveRight:p_node -> {[Tree], 240, []}
  global:Tree:Search:current_node -> {[Tree], 280, []}
  global:Tree:Delete:current_node -> {[Tree], 162, []}
  global:Tree:Insert:current_node -> {[Tree], 129, []}
  -=-=-=-=-=-=-=-=-=-Class-Table-=-=-=-=-=-=-=-=-=-
  BT -> {[BT], 10, []}
  BinaryTree -> {[BinaryTree], 1, []}
  Tree -> {[Tree], 44, []}
  -=-=-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=-=-
  435░ Goal
  867░ MainClass
  371░ Statement
  786░ Expression
  636░ MessageSend
  499░ PrimaryExpression
  527░ AllocationExpression
  BT
  527▓ AllocationExpression  ------------>  [BT]
  499▓ PrimaryExpression  ------------>  [BT]
  [BT]
  636▓ MessageSend  ------------>  [BT]
  786▓ Expression  ------------>  [BT]
  371▓ Statement
  867▓ MainClass ----------------- ------------>  [BinaryTree]
  547░ TypeDeclaration
  356░ ClassDeclaration
  697░ Statement
  363░ AssignmentStatement
  945░ Identifier
  945▓ Identifier  ------------>  [Tree]
  158░ Expression
  871░ PrimaryExpression
  905░ AllocationExpression
  Tree
  905▓ AllocationExpression  ------------>  [Tree]
  871▓ PrimaryExpression  ------------>  [Tree]
  158▓ Expression  ------------>  [Tree]
  [Tree] == [Tree]
  363▓ AssignmentStatement
  697▓ Statement
  638░ Statement
  664░ AssignmentStatement
  714░ Identifier
  714▓ Identifier  ------------>  [boolean]
  151░ Expression
  152░ MessageSend
  850░ PrimaryExpression
  701░ Identifier
  701▓ Identifier  ------------>  [Tree]
  850▓ PrimaryExpression  ------------>  [Tree]
  [Tree]
  238░ ExpressionList
  874░ Expression
  714░ PrimaryExpression
  185░ IntegerLiteral
  185▓ IntegerLiteral  ------------>  [int]
  714▓ PrimaryExpression  ------------>  [int]
  874▓ Expression  ------------>  [int]
  238▓ ExpressionList
  152▓ MessageSend  ------------>  [Tree]
  151▓ Expression  ------------>  [Tree]
  [boolean] == [Tree]
  AssignmentStatement: Type Error

ERROR: Type checking failed for tests/minijava-symboltable-tests/correct-tests/BinaryTree.java (exit code: 1)
